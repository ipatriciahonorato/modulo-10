worker_processes 1;

events { worker_connections 1024; }

http {
    sendfile on;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                '$status $body_bytes_sent "$http_referer" '
                '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Add a custom log format to pipe logs to the log_sender.py script
    log_format json escape=json '{'
                                '"remote_addr":"$remote_addr",'
                                '"remote_user":"$remote_user",'
                                '"time_local":"$time_local",'
                                '"request":"$request",'
                                '"status":$status,'
                                '"body_bytes_sent":$body_bytes_sent,'
                                '"http_referer":"$http_referer",'
                                '"http_user_agent":"$http_user_agent",'
                                '"http_x_forwarded_for":"$http_x_forwarded_for"'
                                '}';

    upstream log_service {
        server log_service:8000;
    }

    upstream user_service {
        server user_service:8000;
    }

    upstream kibana {
        server kibana:5601;
    }

    server {
        listen 80;

        client_max_body_size 100m;

        location /user {
            proxy_pass http://user_service/users;
        }

        location /create {
            proxy_pass http://user_service/users;
        }

        location /log {
            proxy_pass http://log_service/;
        }

        location /log/create {
            proxy_pass http://log_service/log;
        }

        location / {
            proxy_pass http://kibana/;
        }
    }
}
